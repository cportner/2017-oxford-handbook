lm(attend ~ age + female
+ hhsize + num.adults + com.bank + com.market + com.hospital + com.road
+ land.own + land.rent,
subset = edu.none == "1",
data = litData
)
summary(firstStageNone)
# IV for everybody, no education only
ivNone <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend  + com.market + com.hospital + com.road + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone)
# IV for everybody, no education only - different instruments
ivNone2 <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend + com.hospital + com.road + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone2)
firstStageNone2 <-
lm(attend ~ age + female
+ hhsize + num.adults + com.hospital + com.road
+ land.own + land.rent,
subset = edu.none == "1",
data = litData
)
summary(firstStageNone2)
firstStageNone1 <-
lm(attend ~ age + female
+ hhsize + num.adults +  com.market + com.hospital + com.road
+ land.own + land.rent,
subset = edu.none == "1",
data = litData
)
summary(firstStageNone1)
firstStageNone1 <-
lm(attend ~ age + female
+ hhsize + num.adults +  com.market + com.hospital
+ land.own + land.rent,
subset = edu.none == "1",
data = litData
)
summary(firstStageNone1)
# IV for everybody, no education only
ivNone <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend  + com.market + com.hospital + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone)
library(AER)
ivNone <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend  + com.market + com.hospital + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone)
ivNone2 <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend + com.hospital + com.road + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone2)
# IV for everybody, no education only
ivNone <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend  + com.market + com.hospital + com.road + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone)
# IV for everybody, no education only - different instruments
ivNone2 <-
ivreg(lwelfare ~ attend + age + female
+ hhsize + num.adults
| . - attend + com.hospital + com.road + land.own + land.rent ,
subset = edu.none == "1",
data = litData
)
summary(ivNone2)
`14_Dec_08_58_Grades.ECON_4770_01` <- read.csv("~/Downloads/14_Dec_08_58_Grades-ECON_4770_01.csv")
View(`14_Dec_08_58_Grades.ECON_4770_01`)
LPGA <- read.csv("~/teaching/econ3100/2017-01/misc/LPGA.csv")
View(LPGA)
summary(LPGA$scoring.avg)
sd(LPGA$scoring.avg)
mean(LPGA)
mean(LPGA$earnings.usd)
with(LPGA, mean(scoring.avg))
with(LPGA, mean(scoring.avg), sd(scoring.avg))
with(LPGA, mean(scoring.avg) sd(scoring.avg))
summary(LPGA)
sapply(LPGA, sd)
auto <- load(https://dl.dropboxusercontent.com/u/29793394/autos.RData)
auto <- load("https://dl.dropboxusercontent.com/u/29793394/autos.RData")
auto <- url("https://dl.dropboxusercontent.com/u/29793394/autos.RData")
auto <- load("https://dl.dropboxusercontent.com/u/29793394/autos.RData")
library(stargazer)
stargazer(snap)
snap <- url("https://dl.dropboxusercontent.com/u/29793394/econ3100_ps4.rdata")
snap <- load(url("https://dl.dropboxusercontent.com/u/29793394/econ3100_ps4.rdata"))
snap <- load(url("https://dl.dropboxusercontent.com/u/29793394/econ3100_ps4.rdata"))
auto <- url(â€œhttps://dl.dropboxusercontent.com/u/29793394/ autos.RData")
auto <- url("https://dl.dropboxusercontent.com/u/29793394/ autos.RData")
auto <- load(url("https://dl.dropboxusercontent.com/u/29793394/ autos.RData"))
auto <- load(url("https://dl.dropboxusercontent.com/u/29793394/autos.RData"))
snap <- Dataset
save(snap, file = "econ3100_ps4.RData")
load(url("https://dl.dropboxusercontent.com/u/29793394/econ3100_ps4.rdata"))
View(snap)
stargazer(snap)
stargazer(snap, type = "text")
regModel.1 <- lm(fsp.rate ~ unempr, data = snap)
summary(regModel.1)
coef(regModel.1$coefficients["(Intercept)"])
coef(summary(regModel.1)$coefficients["(Intercept)"])
coef(regModel.1)["(Intercept)"])
coef(regModel.1)["(Intercept)"]
coef(regModel.1)["(Intercept)"]+coef(regModel.1)["unempr"]*0.08
hist(rstandard(regModel.1), # normal distribution of errors?
xlab = "Standardized residuals")
plot(fitted(regModel.1), resid(regModel.1),
xlab = "Fitted", ylab = "Residuals",
abline(h=0, col="blue"))
# Graph for changes in TFR
# For Fertility Issues chapter in Oxford handbook
# Claus C Portner
# Begun.: 2017-02-10
# Edited: 2017-02-13
library(tidyr)
# short file paths - assuming work directory is "code"
dataDir <- "../data/Data_Extract_From_World_Development_Indicators"
figureDir <- "../figures"
# Data - extracted from World Bank WDI 2017-02-09 - need to reshape
# .. is missing in the original data
df <- read.csv(
file.path(dataDir,"2017-02-09-wdi-extract.csv"),
na.strings=c(".."))
df$Country.Name <- NULL
df$Series.Name <- NULL
# Tidying up data (need tidyr for that) - multistep process
test <- gather(df, key, value, -Country.Code, -Series.Code)
test1 <- separate(test, key, into = c("y1","y2"), sep = 1)
test2 <- separate(test1, y2, into = c("year","x2"), sep = 4)
test2$y1 <- NULL
test2$x2 <- NULL
test3 <- spread(test2, Series.Code, value)
df <- test3
df$year <- as.numeric(df$year)
df$SH.DYN.MORT <- as.numeric(df$SH.DYN.MORT)
df$SH.DYN.MORT.FE <- as.numeric(df$SH.DYN.MORT.FE)
df$SH.DYN.MORT.MA <- as.numeric(df$SH.DYN.MORT.MA)
df$SP.ADO.TFRT <- as.numeric(df$SP.ADO.TFRT)
df$SP.DYN.TFRT.IN <- as.numeric(df$SP.DYN.TFRT.IN)
df$SP.DYN.WFRT <- as.numeric(df$SP.DYN.WFRT)
install.packages("tidyr")
# Graph for changes in TFR
# For Fertility Issues chapter in Oxford handbook
# Claus C Portner
# Begun.: 2017-02-10
# Edited: 2017-02-13
library(tidyr)
# short file paths - assuming work directory is "code"
dataDir <- "../data/Data_Extract_From_World_Development_Indicators"
figureDir <- "../figures"
# Data - extracted from World Bank WDI 2017-02-09 - need to reshape
# .. is missing in the original data
df <- read.csv(
file.path(dataDir,"2017-02-09-wdi-extract.csv"),
na.strings=c(".."))
df$Country.Name <- NULL
df$Series.Name <- NULL
# Tidying up data (need tidyr for that) - multistep process
test <- gather(df, key, value, -Country.Code, -Series.Code)
test1 <- separate(test, key, into = c("y1","y2"), sep = 1)
test2 <- separate(test1, y2, into = c("year","x2"), sep = 4)
test2$y1 <- NULL
test2$x2 <- NULL
test3 <- spread(test2, Series.Code, value)
df <- test3
df$year <- as.numeric(df$year)
df$SH.DYN.MORT <- as.numeric(df$SH.DYN.MORT)
df$SH.DYN.MORT.FE <- as.numeric(df$SH.DYN.MORT.FE)
df$SH.DYN.MORT.MA <- as.numeric(df$SH.DYN.MORT.MA)
df$SP.ADO.TFRT <- as.numeric(df$SP.ADO.TFRT)
df$SP.DYN.TFRT.IN <- as.numeric(df$SP.DYN.TFRT.IN)
df$SP.DYN.WFRT <- as.numeric(df$SP.DYN.WFRT)
setwd("~/projects/chapters/2017-oxford-handbook/code")
# Graph for changes in TFR
# For Fertility Issues chapter in Oxford handbook
# Claus C Portner
# Begun.: 2017-02-10
# Edited: 2017-02-13
library(tidyr)
# short file paths - assuming work directory is "code"
dataDir <- "../data/Data_Extract_From_World_Development_Indicators"
figureDir <- "../figures"
# Data - extracted from World Bank WDI 2017-02-09 - need to reshape
# .. is missing in the original data
df <- read.csv(
file.path(dataDir,"2017-02-09-wdi-extract.csv"),
na.strings=c(".."))
df$Country.Name <- NULL
df$Series.Name <- NULL
# Tidying up data (need tidyr for that) - multistep process
test <- gather(df, key, value, -Country.Code, -Series.Code)
test1 <- separate(test, key, into = c("y1","y2"), sep = 1)
test2 <- separate(test1, y2, into = c("year","x2"), sep = 4)
test2$y1 <- NULL
test2$x2 <- NULL
test3 <- spread(test2, Series.Code, value)
df <- test3
df$year <- as.numeric(df$year)
df$SH.DYN.MORT <- as.numeric(df$SH.DYN.MORT)
df$SH.DYN.MORT.FE <- as.numeric(df$SH.DYN.MORT.FE)
df$SH.DYN.MORT.MA <- as.numeric(df$SH.DYN.MORT.MA)
df$SP.ADO.TFRT <- as.numeric(df$SP.ADO.TFRT)
install.packages("ggplot2")
View(df)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN) + geom_point(shape = 1))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN)) + geom_point(shape = 1)
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) + geom_point(shape = 1)
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) + geom_line()
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) + geom_line(size=2)
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) + geom_line(size=1.5)
library(ggplot2)
ggplot(data = df,
aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) +
geom_line(size=1.5) +
expand_limits(y = 0) +
xlab("Year") + ylab("Total Fertility Rate")
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015")
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_shape_manual(name = "Region")
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_shape_manual(name = "Region",
values = c(22,21))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_shape_manual(name = "Region",
values = c(22,21))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") +
scale_shape_manual(name = "Region",
values = c(22,21))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") +
scale_shape_manual(name = "Region",
values = c(22,21))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region")
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme(legend.position = c(.7, .4))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.7, .4))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.4, .2))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
# Graph for changes in TFR
# For Fertility Issues chapter in Oxford handbook
# Claus C Portner
# Begun.: 2017-02-10
# Edited: 2017-02-13
library(tidyr)
library(ggplot2)
# short file paths - assuming work directory is "code"
dataDir <- "../data/Data_Extract_From_World_Development_Indicators"
figureDir <- "../figures"
# Data - extracted from World Bank WDI 2017-02-09 - need to reshape
# .. is missing in the original data
df <- read.csv(
file.path(dataDir,"2017-02-09-wdi-extract.csv"),
na.strings=c(".."))
df$Country.Name <- NULL
df$Series.Name <- NULL
# Tidying up data (need tidyr for that) - multistep process
test <- gather(df, key, value, -Country.Code, -Series.Code)
test1 <- separate(test, key, into = c("y1","y2"), sep = 1)
test2 <- separate(test1, y2, into = c("year","x2"), sep = 4)
test2$y1 <- NULL
test2$x2 <- NULL
test3 <- spread(test2, Series.Code, value)
df <- test3
df$year <- as.numeric(df$year)
df$SH.DYN.MORT <- as.numeric(df$SH.DYN.MORT)
df$SH.DYN.MORT.FE <- as.numeric(df$SH.DYN.MORT.FE)
df$SH.DYN.MORT.MA <- as.numeric(df$SH.DYN.MORT.MA)
df$SP.ADO.TFRT <- as.numeric(df$SP.ADO.TFRT)
df$SP.DYN.TFRT.IN <- as.numeric(df$SP.DYN.TFRT.IN)
df$SP.DYN.WFRT <- as.numeric(df$SP.DYN.WFRT)
# Graph for TFR
# This is a pretty good start, but need legends fixed
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
install.packages("ggplot2")
install.packages("ggplot2")
# Graph for changes in TFR
# For Fertility Issues chapter in Oxford handbook
# Claus C Portner
# Begun.: 2017-02-10
# Edited: 2017-02-13
library(tidyr)
library(ggplot2)
# short file paths - assuming work directory is "code"
dataDir <- "../data/Data_Extract_From_World_Development_Indicators"
figureDir <- "../figures"
# Data - extracted from World Bank WDI 2017-02-09 - need to reshape
# .. is missing in the original data
df <- read.csv(
file.path(dataDir,"2017-02-09-wdi-extract.csv"),
na.strings=c(".."))
df$Country.Name <- NULL
df$Series.Name <- NULL
# Tidying up data (need tidyr for that) - multistep process
test <- gather(df, key, value, -Country.Code, -Series.Code)
test1 <- separate(test, key, into = c("y1","y2"), sep = 1)
test2 <- separate(test1, y2, into = c("year","x2"), sep = 4)
test2$y1 <- NULL
test2$x2 <- NULL
test3 <- spread(test2, Series.Code, value)
df <- test3
df$year <- as.numeric(df$year)
df$SH.DYN.MORT <- as.numeric(df$SH.DYN.MORT)
df$SH.DYN.MORT.FE <- as.numeric(df$SH.DYN.MORT.FE)
df$SH.DYN.MORT.MA <- as.numeric(df$SH.DYN.MORT.MA)
df$SP.ADO.TFRT <- as.numeric(df$SP.ADO.TFRT)
df$SP.DYN.TFRT.IN <- as.numeric(df$SP.DYN.TFRT.IN)
df$SP.DYN.WFRT <- as.numeric(df$SP.DYN.WFRT)
# Graph for TFR
# This is a pretty good start, but need legends fixed
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
expand_limits(y = 0) + # include 0 in TFR axis
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0), limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0), limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
p <- ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0), limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
p <- ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0), limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legen title
theme_bw() +
theme(legend.position = c(.2, .2))
p
install.packages("directlabels")
# Graph for changes in TFR
# For Fertility Issues chapter in Oxford handbook
# Claus C Portner
# Begun.: 2017-02-10
# Edited: 2017-02-13
library(tidyr)
library(ggplot2)
library(directlabels)
# short file paths - assuming work directory is "code"
dataDir <- "../data/Data_Extract_From_World_Development_Indicators"
figureDir <- "../figures"
# Data - extracted from World Bank WDI 2017-02-09 - need to reshape
# .. is missing in the original data
df <- read.csv(
file.path(dataDir,"2017-02-09-wdi-extract.csv"),
na.strings=c(".."))
df$Country.Name <- NULL
df$Series.Name <- NULL
# Tidying up data (need tidyr for that) - multistep process
test <- gather(df, key, value, -Country.Code, -Series.Code)
test1 <- separate(test, key, into = c("y1","y2"), sep = 1)
test2 <- separate(test1, y2, into = c("year","x2"), sep = 4)
test2$y1 <- NULL
test2$x2 <- NULL
test3 <- spread(test2, Series.Code, value)
df <- test3
df$year <- as.numeric(df$year)
df$SH.DYN.MORT <- as.numeric(df$SH.DYN.MORT)
df$SH.DYN.MORT.FE <- as.numeric(df$SH.DYN.MORT.FE)
df$SH.DYN.MORT.MA <- as.numeric(df$SH.DYN.MORT.MA)
df$SP.ADO.TFRT <- as.numeric(df$SP.ADO.TFRT)
df$SP.DYN.TFRT.IN <- as.numeric(df$SP.DYN.TFRT.IN)
df$SP.DYN.WFRT <- as.numeric(df$SP.DYN.WFRT)
# Graph for TFR
# This is a pretty good start, but need legends fixed
p <- ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0), limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015") +
scale_colour_hue(name = "Region") + # Set legend title
theme_bw() +
theme(legend.position = c(.2, .2))
p1 <- ggplot(data = df, aes(x=year, y=SP.DYN.TFRT.IN, group  = Country.Code, color = Country.Code)) +
geom_line(size=1.5) + # Thicker line
scale_y_continuous(expand = c(0, 0), limits = c(0,8)) + # better way of 0 in TFR
xlab("Year") + ylab("Total Fertility Rate") + # Pretty labels
ggtitle("Changes in Total Fertility Rate by Region - 1967-2015")
p1 <- p1 + geom_dl(aes(label = Country.Code),
method = "last.points", cex = 0.8)
p1
p
